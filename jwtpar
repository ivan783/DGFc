27959B7209CF8021E68E8FA291A624DE
6EC4DF2D08CC835094
{

    "id":"1",

    "type":"2",

    "name":"xioni",

    "os":"3",

    "osVersion":"3",

    "browser":"3",

    "ip":"3",

    "location":"0",

    "aplicationToken":"2"

}


protected override Result<GetDBFDMonitorResponse> GetDBFDMonitorResult(ProcessBatch processBatch, PaymentAchDto dto)
{
    try
    {
        logger.LogError($"-----Iniciando el Monitoreo: {DateTime.Now.ToString("yyyyMMddHHmmss")}------------");
        GetAccountClientRequest requestRepex = new GetAccountClientRequest();
        SetExchangeRates();
        var userName = UserInfo.Identity.GetUserName();
        requestRepex.AccountNumber = dto.SourceAccount;
        var resRepex = repExtManager.GetAccountClient(requestRepex);

        var results = new ConcurrentBag<GetDBFDMonitorResponse>();
        var typeOpe = "";
        decimal typeMon = 0;

        var request = new GetDBFDMonitorRequest
        {
            RespuestasCorrectas = "S",
            OrigenTransaccion = "WEB-JS",
            CodigoRespuestaHost = "00"
        };

        Parallel.ForEach(dto.Spreadsheet, j =>
        {
            var currentRequest = new GetDBFDMonitorRequest();
            currentRequest.CopyPropertiesFrom(request);

            currentRequest.FechaHoraTransaccion = DateTime.Now.ToString("yyyyMMddHHmmss");
            currentRequest.UsuarioAutorizador = this.UserId.ToString();
            currentRequest.FechaAperturaCuenta = resAccounts.DateCreation.ToString("yyyyMMdd");
            currentRequest.EmailCuentaDestino = j.Mail.Length > 40 ? j.Mail.Trim().Substring(0, Math.Min(40, j.Mail.Trim().Length)) : j.Mail;
            currentRequest.BancoDestino = j.BanksAchCode;
            currentRequest.NumeroTransaccionTrace = GetTrace();
            currentRequest.SessionId = userName.Trim().Substring(10, Math.Min(6, userName.Trim().Length)) + DateTime.Now.ToString("yyyyMMddHHmmss");

            var response = this.manager.GetDBFDMonitor(currentRequest);
            results.Add(response);

            if (response.Body.AnswerCode != "00")
            {
                logger.LogError($"Request: ----{JsonConvert.SerializeObject(currentRequest)}-----");
                var operationStatusError = 8;
                processBatch.OperationStatusId = operationStatusError;
                logger.LogError($"Response: ----{JsonConvert.SerializeObject(response)}----");
            }
        });

        var finalResult = Result<GetDBFDMonitorResponse>.SetOk(results.LastOrDefault() ?? new GetDBFDMonitorResponse());

        return finalResult;
    }
    catch (Exception ex)
    {
        logger.LogError($"Error al obtener monitoreo: {ex.Message}");
        return Result<GetDBFDMonitorResponse>.SetError("Error al obtener monitoreo");
    }
}
