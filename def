    [Id]                     INT            IDENTITY (1, 1) NOT NULL,
    [UserName]               NCHAR (16)     NOT NULL,
    [CompanyId]              INT            NOT NULL,
    [AvailableDays]          INT            NOT NULL,
    [IsActive]               BIT            NOT NULL,
    [UserCreation]           NVARCHAR (6)   NOT NULL,
    [UserModification]       NVARCHAR (6)   NULL,
    [DateCreation]           DATETIME       NOT NULL,
    [DateModification]       DATETIME       NULL,
    [DateLastPasswordChange] DATETIME       NULL,
    [State]                  NCHAR (1)      NULL,
    [Email]                  NVARCHAR (250) NULL,
    [EmailConfirmed]         BIT            NOT NULL,
    [PasswordHash]           NVARCHAR (MAX) NULL,
    [SecurityStamp]          NVARCHAR (MAX) NULL,
    [PhoneNumber]            NVARCHAR (250) NULL,
    [PhoneNumberConfirmed]   BIT            NOT NULL,
    [TwoFactorEnabled]       BIT            NOT NULL,
    [LockoutEndDateUtc]      DATETIME       NULL,
    [LockoutEnabled]         BIT            NOT NULL,
    [AccessFailedCount]      INT            NOT NULL,
    CONSTRAINT [PK_cw.Users] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [FK_cw.Users_cw.Companies_CompanyId] FOREIGN KEY ([CompanyId]) REFERENCES [cw].[Companies] ([Id])
CREATE PROCEDURE [cw].[GetUserByUserNameAndPassword]
    @UserName NCHAR(16),
    @PasswordHash NVARCHAR(MAX)
AS
BEGIN
    SET NOCOUNT ON;

    SELECT *
    FROM [cw].[Users]
    WHERE [UserName] = @UserName
        AND [PasswordHash] = @PasswordHash;
END;


 public async Task<RespUserAuth> GetRespAuth()
        {
            var listUserAppMov = await Task.Run(() =>
            {
                return Context.SetData<RespUserAuth>("cw.GetUserByUserNameAndPassword @UserName",
                    new SqlParameter[]{
                            new SqlParameter("@UserName", "")
                    }).ToList();
            });
            foreach (var item in listUserAppMov)
            {/*
                economicId = item.EconomicGroupId;
                idcUserDet = item.UserDetailIdc;*/
            }
            return listUserAppMov;
        }
